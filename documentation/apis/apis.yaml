openapi: 3.0.0
servers:
  - url: https://api.explorer.provable.com/v1/mainnet
    description: Mainnet API Endpoint
  - url: https://api.explorer.provable.com/v1/testnet
    description: Testnet API Endpoint
  - url: https://api.explorer.provable.com/v1/canary
    description: Canary API Endpoint
info:
  description: |
    The Provable API is designed to provide users with access to the Aleo blockchain through RESTful endpoints that allow one to query the network for block level information, transactions, transitions, and more. Developers can easily interact directly with Aleo through both retrieving data as well as broadcasting transactions.
    
    ## API Base URLs

    | Environment  | URL                                         |
    |--------------|---------------------------------------------|
    | Mainnet API  | https://api.explorer.provable.com/v1/mainnet |
    | Testnet API  | https://api.explorer.provable.com/v1/testnet |
    | Canary API   | https://api.explorer.provable.com/v1/canary  |

    ## Rate Limiting
    
    Users are allowed to perform **5 requests per second** and up to **100,000 requests per day**.
    
    Rate limiting will be enforced and users are subject to blacklisting if they abuse the use of our API. For inquiries into obtaining higher rate limits, please reach out at devservices@provable.com. 

  version: 1.0.0
  title: Provable API
  contact:
    name: API Support
    email: devservices@provable.com
externalDocs:
  description: Find out more about Aleo
  url: "https://aleo.org"
tags:
  - name: blocks
    description: Block-level information and operations
    x-displayName: Block Data
  - name: network
    description: Network and chain state information
    x-displayName: Network Data
  - name: programs
    description: Program deployments and mappings
    x-displayName: Program Data
  - name: transactions
    description: Transaction operations and queries
    x-displayName: Transaction Data
x-tagGroups:
  - name: Blockchain Data
    tags:
      - blocks
      - network
  - name: Application Layer
    tags:
      - programs
      - transactions
paths:
  /block/latest:
    get:
      tags:
        - blocks
      summary: Get Latest Block
      description: Retrieves the latest block from the Aleo blockchain.
      operationId: getLatestBlock
      responses:
        "200":
          description: >
            The full Aleo block object. This object contains block level information including: 
            metadata, ratifications, solutions, and transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /latest/block:
    get:
      tags:
        - blocks
      summary: Get Latest Block (Alternative)
      description: Returns the latest block (alternative endpoint)
      operationId: getLatestBlockAlt
      responses:
        "200":
          description: >
            The full Aleo block object. This object contains block level information including: 
            metadata, ratifications, solutions, and transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /block/height/latest:
    get:
      tags:
        - blocks
      summary: Get Latest Block Height
      description: Retrieves the latest block height from the Aleo blockchain.
      operationId: getLatestHeight
      responses:
        "200":
          description: The latest block height, i.e. tip of chain, retrieved from the Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeightResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /latest/height:
    get:
      tags:
        - blocks
      summary: Get Latest Block Height (Alternative)
      description: Retrieves the latest block height from the Aleo blockchain.
      operationId: getLatestHeightAlt
      responses:
        "200":
          description: The latest block height, i.e. tip of chain, retrieved from the Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeightResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /block/hash/latest:
    get:
      tags:
        - blocks
      summary: Get Latest Block Hash
      description: Returns the latest block hash
      operationId: getLatestHash
      responses:
        "200":
          description: Retrieves the latest block hash from the Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /latest/hash:
    get:
      tags:
        - blocks
      summary: Get Latest Block Hash (Alternative)
      description: Retrieves the latest block hash from the Aleo blockchain.
      operationId: getLatestHashAlt
      responses:
        "200":
          description: A block hash of the latest block from the canonical Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /find/blockHash/{transactionID}:
    get:
      tags:
        - blocks
      summary: Find Block Hash by Transaction ID
      description: Retrieves the block hash associated with the given Transaction ID.
      operationId: findBlockHash
      parameters:
        - name: transactionID
          in: path
          description: The transaction ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A block hash of the block in which the transaction was added to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /block/{heightOrHash}:
    get:
      tags:
        - blocks
      summary: Get Block by Height or Hash
      description: Retrieves the latest block from the Aleo blockchain via the block's height or blockhash.
      operationId: getBlock
      parameters:
        - name: heightOrHash
          in: path
          description: Block height (integer) or block hash (string)
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      responses:
        "200":
          description: >
            The full Aleo block object. This object contains block level information including: 
            metadata, ratifications, solutions, and transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /block/{heightOrHash}/transactions:
    get:
      tags:
        - blocks
      summary: Get Block Transactions
      description: Retrieves all transactions for a block the block's height or blockhash.
      operationId: getBlockTransactions
      parameters:
        - name: heightOrHash
          in: path
          description: Block height (integer) or block hash (string)
          required: true
          schema:
            oneOf:
              - type: integer
              - type: string
      responses:
        "200":
          description: An array of transactions in the given block.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsResponse'
        "404":
          description: Block not found
        "500":
          description: Server error
  /committee/latest:
    get:
      tags:
        - network
      summary: Get Latest Committee
      description: >
        Retrieves the latest committee from the Aleo blockchain. 
        The committee represents the Validator set at this given point in time.
      operationId: getLatestCommittee
      responses:
        "200":
          description: >
            The full committee object containing the list of validators, staked amount, 
            bonding state, and commission rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitteeResponse'
        "404":
          description: Committee not found
        "500":
          description: Server error
  /latest/committee:
    get:
      tags:
        - network
      summary: Get Latest Committee (Alternative)
      description: >
        Retrieves the latest committee from the Aleo blockchain. The committee represents the Validator set at this given point in time.
      operationId: getLatestCommitteeAlt
      responses:
        "200":
          description: >
            The full committee object containing the list of validators, staked amount, 
            bonding state, and commission rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitteeResponse'
        "404":
          description: Committee not found
        "500":
          description: Server error
  /stateRoot/latest:
    get:
      tags:
        - network
      summary: Get Latest State Root
      description: >
        Retrieves the latest state root from the Aleo blockchain. 
        The state root is the merkle root of all previous block hashes.
      operationId: getLatestStateRoot
      responses:
        "200":
          description: The state root of the canonical Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateRootResponse'
        "404":
          description: State root not found
        "500":
          description: Server error
  /latest/stateRoot:
    get:
      tags:
        - network
      summary: Get Latest State Root (Alternative)
      description: >
        Retrieves the latest state root from the Aleo blockchain. 
        The state root is the merkle root of all previous block hashes.
      operationId: getLatestStateRootAlt
      responses:
        "200":
          description: The state root of the canonical Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateRootResponse'
        "404":
          description: State root not found
        "500":
          description: Server error
  /stateRoot/{height}:
    get:
      tags:
        - network
      summary: Get State Root at Specified Height
      description: >
        Retrieves the latest stateRoot from a specific block on the Aleo blockchain. The stateRoot is the merkle root of all previous block hashes.
      operationId: getStateRootAtHeight
      parameters:
        - name: height
          in: path
          description: The block height
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The state root of the canonical Aleo blockchain at a given block height.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateRootResponse'
        "404":
          description: State Root not found
        "500":
          description: Server error
  /latest/totalSupply:
    get:
      tags:
        - network
      summary: Get Total Supply
      description: >
        Retrieves the latest total supply for the Aleo blockchain. 
        Note: This is only available for mainnet currently.
      operationId: getTotalSupply
      responses:
        "200":
          description: The latest total supply in credits, retrieved from the Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyResponse'
        "404":
          description: Supply not found
        "500":
          description: Server error
  /latest/circulatingSupply:
    get:
      tags:
        - network
      summary: Get Circulating Supply
      description: >
        Retrieves the latest circulating supply for the Aleo blockchain. 
        Note: This is only available for mainnet currently.
      operationId: getCirculatingSupply
      responses:
        "200":
          description: The latest circulating supply in credits, retrieved from the Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyResponse'
        "404":
          description: Supply not found
        "500":
          description: Server error
  /find/transactionID/deployment/{programID}:
    get:
      tags:
        - programs
      summary: Find Transaction ID for Program Deployment
      description: >
        Retrieves the Transaction ID associated to the deployment of the given Program.
      operationId: findProgramDeploymentTxId
      parameters:
        - name: programID
          in: path
          description: The program ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The deployment transactionID for when the program was deployed on the Aleo blockchain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionIdResponse'
        "404":
          description: Transaction not found
        "500":
          description: Server error
  /program/{programID}:
    get:
      tags:
        - programs
      summary: Get Program
      description: Retrieves program details by Program ID.
      operationId: getProgram
      parameters:
        - name: programID
          in: path
          description: The program ID
          required: true
          schema:
            type: string
        - name: metadata
          in: query
          description: Include program metadata in response
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: The program source code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramResponse'
        "404":
          description: Program not found
        "500":
          description: Server error
  /program/{programID}/{edition}:
    get:
      tags:
        - programs
      summary: Get Program by Edition
      description: >
        Retrieves program details by Program ID and specific edition.
      operationId: getProgramByEdition
      parameters:
        - name: programID
          in: path
          description: The program ID
          required: true
          schema:
            type: string
        - name: edition
          in: path
          description: The program edition
          required: true
          schema:
            type: integer
        - name: metadata
          in: query
          description: Include program metadata in response
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: The program source code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramResponse'
        "404":
          description: Program not found
        "500":
          description: Server error
  /program/{programID}/mappings:
    get:
      tags:
        - programs
      summary: Get Program Mappings
      description: >
        Retrieves mappings for a given program by Program ID. These mappings can then 
        be queried through additional endpoints.
      operationId: getProgramMappings
      parameters:
        - name: programID
          in: path
          description: The program ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: An array of mappings for the given program.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingsResponse'
        "404":
          description: Program not found
        "500":
          description: Server error
  /program/{programID}/mapping/{mappingName}/{mappingKey}:
    get:
      tags:
        - programs
      summary: Get Mapping Value
      description: >
        Retrieves a mapping value given the name of the mapping and the associated key. The available mappings for a given program can be obtained via the /program/{programID}/mappings query.
      operationId: getMappingValue
      parameters:
        - name: programID
          in: path
          description: The program ID
          required: true
          schema:
            type: string
        - name: mappingName
          in: path
          description: The name of the mapping
          required: true
          schema:
            type: string
        - name: mappingKey
          in: path
          description: The key of the key-value pair in the mapping
          required: true
          schema:
            type: string
      responses:
        "200":
          description: >
            A mapping object pertaining to the revelant information that the program holds 
            in the associated mapping.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingValueResponse'
        "404":
          description: Program not found
        "500":
          description: Server error
  /find/transactionID/{transitionID}:
    get:
      tags:
        - transactions
      summary: Find Transaction ID by Transition ID
      description: Retrieves the Transaction ID associated with a Transition ID.
      operationId: findTransactionIdByTransition
      parameters:
        - name: transitionID
          in: path
          description: The transition ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The transactionID in which the transition is part of.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionIdResponse'
        "404":
          description: Transaction not found
        "500":
          description: Server error
  /find/transitionID/{inputOrOutputID}:
    get:
      tags:
        - transactions
      summary: Find Transition ID
      description: >
        Retrieves the Transition ID associated with a given input our output ID. Input and 
        output IDs can be found via the associated field elements of an input or output.
      operationId: findTransitionId
      parameters:
        - name: inputOrOutputID
          in: path
          description: The input or output ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The transition ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionIdResponse'
        "404":
          description: Transition not found
        "500":
          description: Server error
  /transaction/{transactionID}:
    get:
      tags:
        - transactions
      summary: Get Transaction
      description: Retrieves the full transaction object given a Transaction ID.
      operationId: getTransaction
      parameters:
        - name: transactionID
          in: path
          description: The transaction ID (hex)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A Transaction object containing all inputs, outputs, and fee object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        "404":
          description: Transaction not found
        "500":
          description: Server error
  /transaction/confirmed/{transactionID}:
    get:
      tags:
        - transactions
      summary: Get Transaction Confirmation Status
      description: Retrieves the confirmation status of a transaction that was submitted to the Aleo blockchain.
      operationId: getTransactionConfirmed
      parameters:
        - name: transactionID
          in: path
          description: The transaction ID (hex)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A Transaction object containing confirmation status, all inputs, outputs, and fee object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmationResponse'
        "404":
          description: Transaction not found
        "500":
          description: Server error
  /transaction/unconfirmed/{transactionID}:
    get:
      tags:
        - transactions
      summary: Get Unconfirmed Transaction
      description: >
        Retrieves an unconfirmed transaction from the Aleo blockchain.
      operationId: getUnconfirmedTransaction
      parameters:
        - name: transactionID
          in: path
          description: The transaction ID (hex)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A Transaction object containing all inputs, outputs, and fee object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        "404":
          description: Transaction not found
        "500":
          description: Server error
  /transaction/broadcast:
    post:
      tags:
        - transactions
      summary: Broadcast Transaction
      description: Broadcast a transaction to the Aleo blockchain.
      operationId: broadcastTransaction
      requestBody:
        description: >
          To broadcast a transactions, the request body should follow the outlined json object below. Please be sure to specify the correct "type" of transaction. If you are broadcasting a transaction to deploy a program, use the type "deploy". All other transactions will be of type "execute".
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ExecuteTransaction'
                - $ref: '#/components/schemas/DeployTransaction'
              discriminator:
                propertyName: type
                mapping:
                  execute: '#/components/schemas/ExecuteTransaction'
                  deploy: '#/components/schemas/DeployTransaction'
      responses:
        "200":
          description: >
            A string either indicating why the transaction failed or the successfully 
            broadcasted transaction id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastResponse'
        "404":
          description: Failed to post to route
        "500":
          description: Server error
components:
  schemas:
    BlockResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            block_hash:
              type: string
            previous_hash:
              type: string
            header:
              type: object
              properties:
                previous_state_root:
                  type: string
                transactions_root:
                  type: string
                finalize_root:
                  type: string
                ratifications_root:
                  type: string
                solutions_root:
                  type: string
                subdag_root:
                  type: string
                metadata:
                  type: object
                  properties:
                    network:
                      type: integer
                    round:
                      type: integer
                    height:
                      type: integer
                    cumulative_weight:
                      type: string
                    cumulative_proof_target:
                      type: string
                    coinbase_target:
                      type: integer
                    proof_target:
                      type: integer
                    last_coinbase_target:
                      type: integer
                    last_coinbase_timestamp:
                      type: integer
                    timestamp:
                      type: integer
            authority:
              type: object
              properties:
                type:
                  type: string
                subdag:
                  type: object
                  properties:
                    subdag:
                      type: object
                      properties:
                        round:
                          type: array
                          items:
                            type: object
                            properties:
                              batch_header:
                                type: object
                                properties:
                                  batch_id:
                                    type: string
                                  author:
                                    type: string
                                  round:
                                    type: integer
                                  timestamp:
                                    type: integer
                                  committee_id:
                                    type: string
                                  transmission_ids:
                                    type: array
                                    items:
                                      type: string
                                  previous_certificate_ids:
                                    type: array
                                    items:
                                      type: string
                                  signature:
                                    type: string
                              signatures:
                                type: array
                                items:
                                  type: string
            ratifications:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  amount:
                    type: integer
            solutions:
              type: object
              properties:
                version:
                  type: integer
            transactions:
              type: array
              items:
                type: object
                properties:
                  status:
                    type: string
                  type:
                    type: string
                  index:
                    type: integer
                  transaction:
                    oneOf:
                      - title: deploy
                        type: object
                        properties:
                          type:
                            type: string
                            enum: ["deploy"]
                          id:
                            type: string
                          owner:
                            type: object
                            properties:
                              address:
                                type: string
                              signature:
                                type: string
                            required: ["address", "signature"]
                          deployment:
                            type: object
                            properties:
                              edition:
                                type: integer
                              program:
                                type: string
                              verifying_keys:
                                type: array
                                items:
                                  type: array
                                  items:
                                    oneOf:
                                      - type: string
                                      - type: array
                                        items:
                                          type: string
                              program_owner:
                                type: string
                            required: ["edition", "program", "verifying_keys"]
                          fee:
                            type: object
                            properties:
                              transition:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  program:
                                    type: string
                                  function:
                                    type: string
                                  inputs:
                                    type: array
                                    items:
                                      type: object
                                      additionalProperties: true
                                  outputs:
                                    type: array
                                    items:
                                      type: object
                                      additionalProperties: true
                                  tpk:
                                    type: string
                                  tcm:
                                    type: string
                                  scm:
                                    type: string
                                  global_state_root:
                                    type: string
                                  proof:
                                    type: string
                              finalize:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                    mapping_id:
                                      type: string
                                    key_id:
                                      type: string
                                    value_id:
                                      type: string
                        required: ["type", "id", "owner", "deployment", "fee"]
                      - title: execute
                        type: object
                        properties:
                          type:
                            type: string
                            enum: ["execute"]
                          id:
                            type: string
                          execution:
                            type: object
                            properties:
                              transitions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    program:
                                      type: string
                                    function:
                                      type: string
                                    inputs:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                          id:
                                            type: string
                                          value:
                                            type: string
                                    outputs:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                          id:
                                            type: string
                                          value:
                                            type: string
                                          checksum:
                                            type: string
                                          sender_ciphertext:
                                            type: string
                                    tpk:
                                      type: string
                                    tcm:
                                      type: string
                                    scm:
                                      type: string
                              global_state_root:
                                type: string
                              proof:
                                type: string
                          fee:
                            type: object
                            properties:
                              transition:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  program:
                                    type: string
                                  function:
                                    type: string
                                  inputs:
                                    type: array
                                    items:
                                      type: object
                                      additionalProperties: true
                                  outputs:
                                    type: array
                                    items:
                                      type: object
                                      additionalProperties: true
                                  tpk:
                                    type: string
                                  tcm:
                                    type: string
                                  scm:
                                    type: string
                                  global_state_root:
                                    type: string
                                  proof:
                                    type: string
                              finalize:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                    mapping_id:
                                      type: string
                                    key_id:
                                      type: string
                                    value_id:
                                      type: string
                        required: ["type", "id", "execution", "fee"]
            aborted_transaction_ids:
              type: array
              items:
                type: string
            aborted_solution_ids:
              type: array
              items:
                type: string
    HeightResponse:
      type: object
      properties:
        result:
          type: integer
    HashResponse:
      type: object
      properties:
        result:
          type: string
    TransactionsResponse:
      type: object
      properties:
        result:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              type:
                type: string
              index:
                type: integer
              transaction:
                oneOf:
                  - title: deploy
                    type: object
                    properties:
                      type:
                        type: string
                        enum: ["deploy"]
                      id:
                        type: string
                      owner:
                        type: object
                        properties:
                          address:
                            type: string
                          signature:
                            type: string
                        required: ["address", "signature"]
                      deployment:
                        type: object
                        properties:
                          edition:
                            type: integer
                          program:
                            type: string
                          verifying_keys:
                            type: array
                            items:
                              type: array
                              items:
                                oneOf:
                                  - type: string
                                  - type: array
                                    items:
                                      type: string
                          program_owner:
                            type: string
                        required: ["edition", "program", "verifying_keys"]
                      fee:
                        type: object
                        properties:
                          transition:
                            type: object
                            properties:
                              id:
                                type: string
                              program:
                                type: string
                              function:
                                type: string
                              inputs:
                                type: array
                                items:
                                  type: object
                                  additionalProperties: true
                              outputs:
                                type: array
                                items:
                                  type: object
                                  additionalProperties: true
                              tpk:
                                type: string
                              tcm:
                                type: string
                              scm:
                                type: string
                              global_state_root:
                                type: string
                              proof:
                                type: string
                          finalize:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                mapping_id:
                                  type: string
                                key_id:
                                  type: string
                                value_id:
                                  type: string
                    required: ["type", "id", "owner", "deployment", "fee"]
                  - title: execute
                    type: object
                    properties:
                      type:
                        type: string
                        enum: ["execute"]
                      id:
                        type: string
                      execution:
                        type: object
                        properties:
                          transitions:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                program:
                                  type: string
                                function:
                                  type: string
                                inputs:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                      id:
                                        type: string
                                      value:
                                        type: string
                                outputs:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                      id:
                                        type: string
                                      value:
                                        type: string
                                      checksum:
                                        type: string
                                      sender_ciphertext:
                                        type: string
                                tpk:
                                  type: string
                                tcm:
                                  type: string
                                scm:
                                  type: string
                          global_state_root:
                            type: string
                          proof:
                            type: string
                      fee:
                        type: object
                        properties:
                          transition:
                            type: object
                            properties:
                              id:
                                type: string
                              program:
                                type: string
                              function:
                                type: string
                              inputs:
                                type: array
                                items:
                                  type: object
                                  additionalProperties: true
                              outputs:
                                type: array
                                items:
                                  type: object
                                  additionalProperties: true
                              tpk:
                                type: string
                              tcm:
                                type: string
                              scm:
                                type: string
                              global_state_root:
                                type: string
                              proof:
                                type: string
                          finalize:
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  type: string
                                mapping_id:
                                  type: string
                                key_id:
                                  type: string
                                value_id:
                                  type: string
                    required: ["type", "id", "execution", "fee"]

    CommitteeResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            id:
              type: string
            starting_round:
              type: integer
            address:
              type: object
              properties:
                stake:
                  type: integer
                open_for_delegation:
                  type: boolean
                commission_rate:
                  type: integer
            total_stake:
              type: integer
    StateRootResponse:
      type: object
      properties:
        result:
          type: string
    SupplyResponse:
      type: object
      properties:
        result:
          type: string
    TransactionIdResponse:
      type: object
      properties:
        result:
          type: string
    ProgramResponse:
      type: string
    MappingsResponse:
      type: object
      properties:
        result:
          type: array
          items:
            type: string

    MappingValueResponse:
      type: object
      properties:
        result:
          additionalProperties: true
    TransactionResponse:
      type: object
      properties:
        result:
          type: object
          additionalProperties: true
    TransitionIdResponse:
      type: object
      properties:
        result:
          type: string
    ConfirmationResponse:
      type: object
      properties:
        result:
          type: boolean
    BroadcastResponse:
      type: object
      properties:
        result:
          type: string
    ExecuteTransaction:
      type: object
      properties:
        type:
          type: string
          enum: ["execute"]
        id:
          type: string
        execution:
          type: object
          properties:
            transitions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  program:
                    type: string
                  function:
                    type: string
                  inputs:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        id:
                          type: string
                        value:
                          type: string
                      required:
                        - type
                        - id
                        - value
                  outputs:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        id:
                          type: string
                        value:
                          type: string
                      required:
                        - type
                        - id
                        - value
                  tpk:
                    type: string
                  tcm:
                    type: string
                  scm:
                    type: string
                required:
                  - id
                  - program
                  - function
                  - inputs
                  - outputs
                  - tpk
                  - tcm
                  - scm
            global_state_root:
              type: string
            proof:
              type: string
          required:
            - transitions
            - global_state_root
            - proof
        fee:
          type: object
          properties:
            transition:
              type: object
              properties:
                id:
                  type: string
                program:
                  type: string
                function:
                  type: string
                inputs:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      id:
                        type: string
                      value:
                        type: string
                    required:
                      - type
                      - id
                      - value
                outputs:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      id:
                        type: string
                      value:
                        type: string
                    required:
                      - type
                      - id
                      - value
                tpk:
                  type: string
                tcm:
                  type: string
                scm:
                  type: string
              required:
                - id
                - program
                - function
                - inputs
                - outputs
                - tpk
                - tcm
                - scm
            global_state_root:
              type: string
            proof:
              type: string
          required:
            - transition
            - global_state_root
            - proof
      required:
        - type
        - id
        - execution
        - fee
    DeployTransaction:
      type: object
      properties:
        type:
          type: string
          enum: ["deploy"]
        id:
          type: string
        deployment:
          type: object
          properties:
            edition:
              type: integer
            program:
              type: string
            verifying_keys:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  id:
                    type: string
                  value:
                    type: string
                required:
                  - type
                  - id
                  - value
          required:
            - edition
            - program
            - verifying_keys
        fee:
          type: object
          properties:
            transition:
              type: object
              properties:
                id:
                  type: string
                program:
                  type: string
                function:
                  type: string
                inputs:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      id:
                        type: string
                      value:
                        type: string
                    required:
                      - type
                      - id
                      - value
                outputs:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      id:
                        type: string
                      value:
                        type: string
                    required:
                      - type
                      - id
                      - value
                tpk:
                  type: string
                tcm:
                  type: string
                scm:
                  type: string
              required:
                - id
                - program
                - function
                - inputs
                - outputs
                - tpk
                - tcm
                - scm
            global_state_root:
              type: string
            proof:
              type: string
          required:
            - transition
            - global_state_root
            - proof
      required:
        - type
        - id
        - deployment
        - fee
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
